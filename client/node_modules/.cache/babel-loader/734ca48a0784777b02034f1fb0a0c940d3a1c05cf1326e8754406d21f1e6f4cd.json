{"ast":null,"code":"var _jsxFileName = \"/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/EventList.js\";\nimport React, { useState } from 'react';\nimport PanelEvent from \"./PanelEvent\";\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventList(_ref) {\n  var _this = this;\n  var openEmail = _ref.openEmail,\n    name = _ref.name;\n  // Replace with an array containing filtered parsed events\n  var eventlist = [1, 2, 3];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), eventlist.map(function () {\n        return /*#__PURE__*/_jsxDEV(PanelEvent, {\n          category: name,\n          openEmail: openEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","PanelEvent","Stack","Typography","jsxDEV","_jsxDEV","EventList","_ref","_this","openEmail","name","eventlist","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","map","category","_c","$RefreshReg$"],"sources":["/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/EventList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PanelEvent from \"./PanelEvent\";\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n\nexport default function EventList({ openEmail, name }) {\n    // Replace with an array containing filtered parsed events\n    const eventlist = [1, 2, 3];\n\n    return(\n        <div>\n        <Stack>\n        <Typography variant = \"h5\" align=\"center\">\n            {name}\n        </Typography>\n        {\n            eventlist.map(() =>\n            <PanelEvent category={name} openEmail={openEmail}/>)\n        }\n        </Stack>\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAsB;EAAA,IAAAC,KAAA;EAAA,IAAnBC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;EAC/C;EACA,IAAMC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE3B,oBACIN,OAAA;IAAAO,QAAA,eACAP,OAAA,CAACH,KAAK;MAAAU,QAAA,gBACNP,OAAA,CAACF,UAAU;QAACU,OAAO,EAAG,IAAI;QAACC,KAAK,EAAC,QAAQ;QAAAF,QAAA,EACpCF;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAETP,SAAS,CAACQ,GAAG,CAAC;QAAA,oBACdd,OAAA,CAACJ,UAAU;UAACmB,QAAQ,EAAEV,IAAK;UAACD,SAAS,EAAEA;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAV,KAAC,CAAC;MAAA,EAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACG,EAAA,GAjBuBf,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}