{"ast":null,"code":"import _slicedToArray from \"/Users/ayzo/cs178/project/showup/showup/showup/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport PanelEvent from \"./PanelEvent\";\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { eventsContext } from '../components/EventsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventList(_ref) {\n  _s();\n  var _this = this;\n  var openEmail = _ref.openEmail,\n    name = _ref.name;\n  // Replace with an array containing filtered parsed events\n  var _useContext = useContext(eventsContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    response = _useContext2[0],\n    setResponse = _useContext2[1];\n  var eventlist = [];\n  for (var i = 0; i < response.length; i++) {\n    if (response[i].event && response[i].category.toLowerCase() == name.toLowerCase()) {\n      eventlist.push(response[i]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), eventlist.map(function (Event) {\n        return /*#__PURE__*/_jsxDEV(PanelEvent, {\n          Event: Event,\n          openEmail: openEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(EventList, \"CdO85wTyqwxIcYeo8svFMouzbTg=\");\n_c = EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useContext","PanelEvent","Stack","Typography","eventsContext","jsxDEV","_jsxDEV","EventList","_ref","_s","_this","openEmail","name","_useContext","_useContext2","_slicedToArray","response","setResponse","eventlist","i","length","event","category","toLowerCase","push","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","map","Event","_c","$RefreshReg$"],"sources":["/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/EventList.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport PanelEvent from \"./PanelEvent\";\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { eventsContext } from '../components/EventsContext';\n\n\nexport default function EventList({ openEmail, name }) {\n    // Replace with an array containing filtered parsed events\n    const [response, setResponse] = useContext(eventsContext);\n    let eventlist = [];\n    for (let i = 0; i < response.length; i++) {\n        if (response[i].event && response[i].category.toLowerCase() == name.toLowerCase()){\n            eventlist.push(response[i])\n        }\n    }\n    return(\n        <div>\n        <Stack>\n        <Typography variant = \"h5\" align=\"center\">\n            {name}\n        </Typography>\n        {\n            eventlist.map((Event) =>\n            <PanelEvent Event={Event} openEmail={openEmail}/>)\n        }\n        </Stack>\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAAAC,KAAA;EAAA,IAAnBC,SAAS,GAAAH,IAAA,CAATG,SAAS;IAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;EAC/C;EACA,IAAAC,WAAA,GAAgCb,UAAU,CAACI,aAAa,CAAC;IAAAU,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAAlDG,QAAQ,GAAAF,YAAA;IAAEG,WAAW,GAAAH,YAAA;EAC5B,IAAII,SAAS,GAAG,EAAE;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIH,QAAQ,CAACG,CAAC,CAAC,CAACE,KAAK,IAAIL,QAAQ,CAACG,CAAC,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,IAAIX,IAAI,CAACW,WAAW,CAAC,CAAC,EAAC;MAC9EL,SAAS,CAACM,IAAI,CAACR,QAAQ,CAACG,CAAC,CAAC,CAAC;IAC/B;EACJ;EACA,oBACIb,OAAA;IAAAmB,QAAA,eACAnB,OAAA,CAACJ,KAAK;MAAAuB,QAAA,gBACNnB,OAAA,CAACH,UAAU;QAACuB,OAAO,EAAG,IAAI;QAACC,KAAK,EAAC,QAAQ;QAAAF,QAAA,EACpCb;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAETb,SAAS,CAACc,GAAG,CAAC,UAACC,KAAK;QAAA,oBACpB3B,OAAA,CAACL,UAAU;UAACgC,KAAK,EAAEA,KAAM;UAACtB,SAAS,EAAEA;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAArB,KAAC,CAAC;MAAA,EAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACtB,EAAA,CAtBuBF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}