{"ast":null,"code":"import _slicedToArray from \"/Users/ayzo/cs178/project/showup/showup/showup/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Dashboard from \"../components/Dashboard\";\nimport EventNav from \"../components/EventNav\";\nimport Stack from '@mui/material/Stack';\n// import emails from \"../../emails.json\"\nimport axios from 'axios';\nimport { eventsContext } from '../components/EventsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  var events = [];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    response = _useState2[0],\n    setResponse = _useState2[1];\n  // const loadResponse = (prompt, id, body) => {\n  //     axios\n  //     .post(\"/chat\", { prompt })\n  //     .then((res) => {\n  //         let apidata = res.data[0];\n  //         apidata[\"id\"] = id;\n  //         apidata[\"body\"] = body;\n  //         events.push(apidata);\n  //         setResponse(events);\n  //     })\n  //     .catch((err) => {\n  //         console.error(err);\n  //     });\n  // };\n\n  // for (var prop in emails) {\n  //     // Email hasn't been previously recorded \n  //     if (events.find((elt) => elt.id == prop) == undefined) {\n  //         // Parse from AI\n  //         let prompt = `Return just a valid JSON array of objects for this email`+ emails[prop][0].text + `following this format: [{“event”: \"a boolean of whether or not it is promoting an event with a date and location”,\n  //         \"name\":\"Short title for event\",\n  //         “date”: “Numeric Month/Day/2023 of event”,\n  //         \"time\": \"Time of event\",\n  //         “location”: “the location of the event”,\n  //         “summary”: “1- 2 sentence summary of the event”,\n  //         “category”: “the best matching category from educational, parties, clubs, or other”]`;\n  //         loadResponse(prompt, prop, emails[prop][0].text);\n  //     }\n  // }\n\n  // console.log(events)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(eventsContext.Provider, {\n      value: [response, setResponse],\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 40,\n        children: [/*#__PURE__*/_jsxDEV(EventNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"TM4HGnxieAxLTyBQJEA7E7LlHYI=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Dashboard","EventNav","Stack","axios","eventsContext","jsxDEV","_jsxDEV","Home","_s","events","_useState","_useState2","_slicedToArray","response","setResponse","children","Provider","value","direction","spacing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayzo/cs178/project/showup/showup/showup/client/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Dashboard from \"../components/Dashboard\";\nimport EventNav from \"../components/EventNav\";\nimport Stack from '@mui/material/Stack';\n// import emails from \"../../emails.json\"\nimport axios from 'axios';\nimport { eventsContext } from '../components/EventsContext';\n\nexport default function Home() {\n    let events = [];\n    const [response, setResponse] = useState(null);\n    // const loadResponse = (prompt, id, body) => {\n    //     axios\n    //     .post(\"/chat\", { prompt })\n    //     .then((res) => {\n    //         let apidata = res.data[0];\n    //         apidata[\"id\"] = id;\n    //         apidata[\"body\"] = body;\n    //         events.push(apidata);\n    //         setResponse(events);\n    //     })\n    //     .catch((err) => {\n    //         console.error(err);\n    //     });\n    // };\n    \n    // for (var prop in emails) {\n    //     // Email hasn't been previously recorded \n    //     if (events.find((elt) => elt.id == prop) == undefined) {\n    //         // Parse from AI\n    //         let prompt = `Return just a valid JSON array of objects for this email`+ emails[prop][0].text + `following this format: [{“event”: \"a boolean of whether or not it is promoting an event with a date and location”,\n    //         \"name\":\"Short title for event\",\n    //         “date”: “Numeric Month/Day/2023 of event”,\n    //         \"time\": \"Time of event\",\n    //         “location”: “the location of the event”,\n    //         “summary”: “1- 2 sentence summary of the event”,\n    //         “category”: “the best matching category from educational, parties, clubs, or other”]`;\n    //         loadResponse(prompt, prop, emails[prop][0].text);\n    //     }\n    // }\n\n    // console.log(events)\n\n    return (\n        <div>\n        {/* <NavBar/> */}\n        <eventsContext.Provider\n            value={[response, setResponse]}>\n        <Stack direction=\"row\" spacing={40}>\n        <EventNav/>\n        <Dashboard/>\n        </Stack>\n        </eventsContext.Provider>\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,IAAIC,MAAM,GAAG,EAAE;EACf,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIL,OAAA;IAAAS,QAAA,eAEAT,OAAA,CAACF,aAAa,CAACY,QAAQ;MACnBC,KAAK,EAAE,CAACJ,QAAQ,EAAEC,WAAW,CAAE;MAAAC,QAAA,eACnCT,OAAA,CAACJ,KAAK;QAACgB,SAAS,EAAC,KAAK;QAACC,OAAO,EAAE,EAAG;QAAAJ,QAAA,gBACnCT,OAAA,CAACL,QAAQ;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACXjB,OAAA,CAACN,SAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd;AAACf,EAAA,CA/CuBD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}